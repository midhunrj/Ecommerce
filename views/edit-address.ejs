<%- include("./layouts/profile-header.ejs") %>
<div class="container mt-4">
    <% console.log(userAddress.Address._id); %>
    <form id="editAddressForm" method="post" action="/edit-Address?id=<%= userAddress.Address[0]._id %>" onsubmit="return validateForm()" >
        <div class="row">
            <div class="col-md-6">
                <input type="hidden" name="id" value="<%= userAddress.Address[0]._id %>">
                <div class="form-group">
                    <label for="name">Name:</label>
                    <input type="text" class="form-control" required="" value="<%= userAddress.Address[0].name %>"  name="name" placeholder="Enter Name" oninput="validateField(this)">
                    <span id="nameError" class="error"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="Address">Address:</label>
                    <input type="text" class="form-control" required="" value="<%= userAddress.Address[0].address %>"  name="Address" placeholder="Enter Address" oninput="validateField(this)">
                    <span id="addressError" class="error"></span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="landmark">Landmark:</label>
                    <input type="text" class="form-control" required="" value="<%= userAddress.Address[0].landmark %>"  name="landmark" placeholder="Enter city" oninput="validateField(this)">
                    <span id="landmarkError" class="error"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="city">City:</label>
                    <input type="text" class="form-control" required="" value="<%= userAddress.Address[0].city %>"  name="city" placeholder="Enter City" oninput="validateField(this)">
                    <span id="cityError" class="error"></span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="state">State:</label>
                    <input type="text" class="form-control" required="" value="<%= userAddress.Address[0].state %>"  name="state" placeholder="Enter State" oninput="validateField(this)">
                    <span id="stateError" class="error"></span>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="country">Country:</label>
                    <input type="text" class="form-control" required="" value="<%= userAddress.Address[0].country %>"  name="country" placeholder="Enter Country" oninput="validateField(this)">
                    <span id="countryError" class="error"></span>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="pincode">PIN:</label>
                    <input type="tel" class="form-control" required="" value="<%= userAddress.Address[0].pincode %>"  name="pincode" placeholder="Enter pincode" oninput="validateField(this)">
                    <span id="pincodeError" class="error"></span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="phone">MobileNumber:</label>
                    <input type="tel" class="form-control" required="" value="<%= userAddress.Address[0].phone %>"  name="phone" placeholder="Enter phone" oninput="validateField(this)">
                    <span id="phoneError" class="error"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="altphone">Alternate Mobile:</label>
                    <input type="tel" class="form-control" required="" value="<%= userAddress.Address[0].altphone  %>"  name="altphone" placeholder="Enter Alternate phone" oninput="validateField(this)">
                    <span id="altphoneError" class="error"></span>
                </div>
            </div>
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </form>
</div>
<%- include("./layouts/footer.ejs") %>

<script>
    function displayError(element, message) {
        const errorElement = document.getElementById(`${element.name}Error`);
        errorElement.innerHTML = message;
        errorElement.style.color = 'red'; // Set error message color to red
    }

    function clearError(element) {
        const errorElement = document.getElementById(`${element.name}Error`);
        errorElement.innerHTML = '';
    }

    function validateField(element) {
        const value = element.value.trim();

        // Clear previous error messages
        clearError(element);

        if (value === '') {
            displayError(element, 'Field is required');
            return false;
        }

        // Additional validation based on the field name
        switch (element.name) {
            case 'name':
                if (!/^[A-Z]/.test(value)) {
                    displayError(element, 'First letter should be capital');
                    return false;
                }
                break;
            case 'pincode':
                if (!/^\d+$/.test(value)) {
                    displayError(element, 'PIN should contain only numbers');
                    return false;
                }
                break;
            case 'phone':
            case 'altphone':
                if (!/^\d{10}$/.test(value)) {
                    displayError(element, 'Please enter a valid 10-digit phone number');
                    return false;
                }
                break;
            // Add similar cases for other fields
        }

        return true;
    }

    function validateForm() {
        const formElements = document.forms["editAddressForm"].elements;
        let isValid = true;

        Array.from(formElements).forEach(element => {
            if (element.type !== "submit") {
                if (!validateField(element)) {
                    isValid = false;
                }
            }
        });

        return isValid;
    }
</script>
