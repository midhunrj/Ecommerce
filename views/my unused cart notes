const Checkoutpage = async (req, res) => {
    try {
        const user = req.session.user;

        const addressdata = await Address.findOne({ userid: user });
        const cartdata = await Cart.findOne({ user_id: user });

        if (!cartdata) {
            // Handle the case where the cart is not found for the user
            return res.status(404).render('Check-out', { user: user });
        }

        const cartItems = cartdata.cartItems;
        const cartlist = cartItems.map(item => item.product_id);
        const productitems = await Product.find({ _id: { $in: cartlist } });
        console.log(productitems);
        res.render('Check-out', { products: productitems, Cart: cartdata, cartdata: cartItems, user,userAddress:addressdata });
    } catch (error) {
        console.log(error.message);
        res.status(500).send('Internal Server Error');
    }
};
 const addToCart = async (req, res) => {
    try {
        const productId = req.query.id;
        const userId = req.session.user;

        // Find the user's cart
        let cartData = await Cart.findOne({ user_id: userId });
      console.log("look user cart",cartData)
        // Find the product data
        const productData = await Product.findOne({ _id: productId });

        // Check if the user has a cart
        if (cartData) {
            // Check if the product is already in the cart
            const cartItems = cartData.cartItems.find(item => item.product_id == productId);
          console.log("find cart product",cartItems);
            if (cartItems) {
                // Update the quantity for the found cart item
                const updatedQuantity = cartItems.quantity + 1; // Assuming you want to increase the quantity by 1
                cartItems.quantity = updatedQuantity;
            } else {
                // Add a new item to cartItems
                cartData.cartItems.push({
                    product_id: productId,
                    quantity: 1, // Assuming you want to add one item
                    price: productData.price
                });
            }

            // Save the updated cart data
            await cartData.save();
        } else {
            // If the user doesn't have a cart, create a new one
            const newCart = new Cart({
                user_id: userId,
                cartItems: [{
                    product_id: productId,
                    quantity: 1, // Assuming you want to add one item
                    price: productData.price
                }]
            });

            // Save the new cart data
            await newCart.save();
        }

        res.status(200).json({ message: 'Product added to cart successfully' });
    } catch (error) {
        console.error(error);
        res.status(500).json({ error: 'Internal Server Error' });
    }
};
<% for(let i=0; i<Cart.cartItems.length; i++){ %>
    <% if(products[i]&&products[i]._id){ %>
        <% var x=0 %>
        <% let totalSubtotal=0 %>
        <% console.log("Cartpage") %>
    <tr>
        <td class="image product-thumbnail"><img src="./productImage/<%= products[i].image[0] %>" alt="#"></td>
        <td class="product-des product-name">
            <h5 class="product-name"><a href="shop-product-right.html"><%= products[i].productname %></a></h5>
            <!-- Adjust the path to the actual property in your product data -->
            <p class="font-xs"><%= products[i].Brand %></p>
        </td>
        <td class="price" data-title="Price"><span> ₹<%= Cart.cartItems[i].price %> </span></td>
        <td class="text-center" data-title="Stock">
            <div class="detail-qty border radius m-auto">
                <% if (typeof i !== 'undefined') { %>
                    
       <button class="btn btn-sm decrement-button" data-product-index="<%= i %>" onclick="updateQuantity('<%= cartdata[i].product_id %>','<%= cartdata[i].quantity %>','-1','<%= cartdata[i].price %>','<%= i %>','<%= products[i].stock %>')">-</button>
       <input class="qty-val" id="cartProductQuantity<%= i %>" value="<%= cartdata[i].quantity %>" style="width: 45px;" type="text" readonly value="">
      <button class="btn btn-sm increment-button" data-product-index="<%= i %>" onclick="updateQuantity('<%= cartdata[i].product_id %>','<%= cartdata[i].quantity %>','1','<%= cartdata[i].price %>','<%= i %>','<%= products[i].stock %>')">+</button>

               <% console.log("value of i",i); %>     
                <% } %>
            </div>
        </td>
        
        <td class="text-right" data-title="Cart" >
            <% let subtotal=cartdata[i].price * cartdata[i].quantity %>
            <% console.log("subtotal",subtotal); %>
            <!-- You may need to calculate the subtotal based on quantity and price -->
            <span><text  id="subTotal<%= i %>"> <%= subtotal %>.00</text> </span>
            <% totalSubtotal += subtotal; %>
        </td>
        <td class="action" data-title="Remove">
            <a href="/delete-cart?id=<%=Cart.cartItems[i].product_id %>" class="text-muted"><i class="fi-rs-trash"></i></a>
        </td>
    </tr>
    <% console.log(cartdata[i].price * cartdata[i].quantity,"qqqq"); %>

    <%  x +=cartdata[i].price * cartdata[i].quantity%>
<% } %>
<% }  %>


<% console.log(x,"xxx"); %>

                <input type="hidden" name="" id="totalabc" value="<%= x  %>">
            </tbody>
        </table>
</div>



<tr>
<td colspan="6" class="text-end">
    <a href="#" class="text-muted"> <i class="fi-rs-cross-small"></i> Clear Cart</a>
</td>
</tr>
</tbody>
</table>

</div>
<div class="cart-action text-end">
<a class="btn  mr-10 mb-sm-15"><i class="fi-rs-shuffle mr-10"></i>Update Cart</a>
<a class="btn "><i class="fi-rs-shopping-bag mr-10"></i>Continue Shopping</a>
</div>

<div class="col-lg-6 col-md-12">
<div class="border p-md-4 p-30 border-radius cart-totals">
<div class="heading_s1 mb-3">
<h4>Cart Totals</h4>
</div>
<div class="table-responsive">
<table class="table">
    <tbody>
        <tr>
            <td class="cart_total_label">Cart Subtotal</td>
            <td class="cart_total_amount"><span class="font-lg fw-900 text-brand"> ₹<%= totalSubtotal %></span></td>
        </tr>
        <tr>
            <td class="cart_total_label">Shipping</td>
            <td class="cart_total_amount"> <i class="ti-gift mr-5"></i> Free Shipping</td>
        </tr>
        <tr>
            <td class="cart_total_label">Total</td>
            <td class="cart_total_amount"><strong><span class="font-xl fw-900 text-brand"><text id="total"> ₹<%= totalSubtotal %></text></span></strong></td>
        </tr>
    </tbody>
</table>
</div>
<a href="/checkout" class="btn "> <i class="fi-rs-box-alt mr-10"></i> Proceed To CheckOut</a>
</div>
</div>
<% } else { %>
<!-- Handle case when the cart is empty -->
<p>Your cart is empty.</p>
<div class="container mt-5">
<div class=" text-center">
<img src="/assets/imgs/page/download.png" alt="Empty Cart Image">
<p>Uh-oh! Your cart is feeling a bit lonely.</p>
<p>Time to fill it up with amazing finds!</p>
<a href="/" class="btn btn-primary">Add something to Cart</a>
</div>
</div>
<% } %>
</div>
</div>
</div>
</div>
</section>
</main>
<%- include("./layouts/footer.ejs") %>
<!-- Vendor JS-->
<script>

function updateQuantity(productId, cartQuantity, count, productPrice, i, productQuantity) {
alert(productId)
alert(productPrice)
alert(cartQuantity)
alert(count)
//  alert(i)
//  alert(productQuantity)

const abc = document.getElementById("totalabc").value
console.log(abc, "hi");
console.log(productId, cartQuantity, count, productPrice, i, productQuantity);
const cartProductQuantityElement = document.querySelector(`#cartProductQuantity${i}`)
//  alert('quantity')
console.log(cartProductQuantityElement);
console.log(cartProductQuantityElement.value);
alert(cartProductQuantityElement.value,'quantity')
const subtotalElement = document.querySelector(`#subTotal${i}`);
alert(subtotalElement.innerHTML,"subelm gdfgdgdf")
console.log(productPrice);

const totalElements = document.getElementById('total').innerHTML;
alert(parseInt(subtotalElement.innerHTML)+ parseInt(productPrice))

console.log("subtotalElement",subtotalElement.innerHTML);
console.log("hi there");


let currentQuantity = parseInt(cartProductQuantityElement.value)
console.log("currentQuantity",currentQuantity);

let currentSubTotal = parseInt(subtotalElement.innerHTML)
console.log("currentSubtotal",currentSubTotal);
alert(currentSubTotal+"sub")
console.log("hello");
//  alert(currentTotal+"total")
if(isNaN(currentQuantity))
{
alert("currentQuantity is not a number")
}
else{
alert("currentQuantity is  a number") 
}
const countAsNumber = parseInt(count, 10);

if (isNaN(countAsNumber)) {
alert("count is not a number");
} else {
alert("count is a number");
}

const newQuantity = currentQuantity + countAsNumber;
alert(newQuantity)
if (count === -1 && newQuantity < 1) {
return; 
}

if(currentSubTotal < currentSubTotal){
return
}

if (count == 1 && newQuantity > productQuantity) {


Swal.fire({
title: 'STOCK!',
text: 'Product is out of stock.',
icon: 'error',
timer: 5000
})
return
}

const newSubtotal = newQuantity * productPrice
if (count == 1) {
alert('1')
document.getElementById(`subTotal${i}`).innerHTML = parseInt(subtotalElement.innerHTML) + parseInt(productPrice)
} else {
alert('else')
document.getElementById(`subTotal${i}`).innerHTML = parseInt(subtotalElement.innerHTML) - parseInt(productPrice)
}



alert('in starting '+newSubtotal)
$.ajax({
url: '/updateQuantity',
method: 'POST',
data: {
productId: productId,
count: count
},

success: (response) => {
alert('sucess')
//  location.reload()


currentQuantity = parseInt(cartProductQuantityElement.value)
alert(currentQuantity,"currQua")
console.log(currentQuantity,"currQua");
currentSubTotal = parseInt(subtotalElement.value)
alert(subtotalElement.value,"subttl")
console.log(currentSubTotal,"subttl");
//  alert(currentTotal,"ctotal")
document.getElementById(`cartProductQuantity${i}`).value = currentQuantity + parseInt(count)

document.getElementById(`subTotal${i}`).value = currentSubTotal * parsefloat(count)
// alert(parseInt(abc) + parseInt(response.totalAmount),"helloooooooooooooooooooo")
if (response.count == 1) {
console.log("TOtal Element == >" , totalElements)
document.getElementById(`total`).innerHTML = parseInt(totalElements) + parseInt(response.totalAmount)
} else {
document.getElementById(`total`).innerHTML = parseInt(totalElements) - parseInt(response.totalAmount)

}


},
error: (error) => {
// alert(error)    
}
})
}
</script> when i am updating the subtotal value should see as float having.00 at end