<%- include("./layouts/user-header.ejs") %>
<div class="container">
<form method="post" name="enq" action="/change-password?id=<%= users._id %>" novalidate>
    <div class="row mt-4">
        <div class="col-md-6 mx-auto">
            <h2 class="text-center mb-4">Change Password</h2>
            <div class="form-group">
                <label for="currentPassword">Current Password <span class="required">*</span></label>
                <input required id="currentPassword" class="form-control" name="password" type="password">
                <span id="currentPasswordError" class="error-message" style="color:red;"></span>
                <span id="messageContainer" style="color:red;"><%= message1 %></span>
            </div>
            <div class="form-group">
                <label for="newPassword">New Password <span class="required">*</span></label>
                <input required id="newPassword" class="form-control" name="newpassword" type="password">
                <span id="newPasswordError" class="error-message" style="color:red;"></span>
            </div>
            <div class="form-group">
                <label for="confirmPassword">Confirm Password <span class="required">*</span></label>
                <input required id="confirmPassword" class="form-control" name="confirmpassword" type="password">
                <span id="confirmPasswordError" class="error-message" style="color:red;"></span>
            </div>
            <div class="text-center">
                <span id="messagesContainer" style="color:red;"><%= message %></span>
                <button type="submit" class="btn btn-primary mt-3">Save</button>
            </div>
        </div>
    </div>
</form>
<div class="row mt-3">
    <div class="col-md-6 mx-auto text-center">
        <a href="/profile" id="changePasswordLink">Go to profile</a>
    </div>
</div>
</div>

<script>
    // Function to validate form fields
    function validateForm() {
        const currentPassword = document.getElementById('currentPassword').value;
        const newPassword = document.getElementById('newPassword').value;
        const confirmPassword = document.getElementById('confirmPassword').value;

        let isValid = true;

        if (!currentPassword) {
            displayError('currentPassword', 'Current Password is required');
            isValid = false;
        } else {
            hideError('currentPassword');
        }

        if (!newPassword) {
            displayError('newPassword', 'New Password is required');
            isValid = false;
        } else {
            hideError('newPassword');
        }

        if (!confirmPassword) {
            displayError('confirmPassword', 'Confirm Password is required');
            isValid = false;
        } else {
            hideError('confirmPassword');
        }

        return isValid;
    }

    // Function to display error message for a specific field with timeout
    function displayError(fieldId, message) {
        const errorElement = document.getElementById(`${fieldId}Error`);
        errorElement.textContent = message;

        // Hide the error message after 3 seconds
        setTimeout(() => {
            errorElement.textContent = '';
        }, 3000); // 3000 milliseconds = 3 seconds
    }

    // Function to hide error message for a specific field with timeout
    function hideError(fieldId) {
        const errorElement = document.getElementById(`${fieldId}Error`);
        
        // Hide the error message after 3 seconds
        setTimeout(() => {
            errorElement.textContent = '';
        }, 3000); // 3000 milliseconds = 3 seconds
    }

    // Attach event listener to form submission
    document.querySelector('form[name="enq"]').addEventListener('submit', function(event) {
        if (!validateForm()) {
            event.preventDefault(); // Prevent form submission if validation fails
        }
    });
</script>

<script>
    const messageContainer = document.getElementById('messageContainer');

// Check if the message container exists
if (messageContainer) {
    // After 3 seconds, hide the message by setting its display property to 'none'
    setTimeout(() => {
        messageContainer.style.display = 'none';
    }, 3000); // 3000 milliseconds = 3 seconds
}

const messageContainer2 = document.getElementById('messagesContainer');

// Check if the second message container exists
if (messageContainer2) {
    // After 3 seconds, hide the second message by setting its display property to 'none'
    setTimeout(() => {
        messageContainer2.style.display = 'none';
    }, 3000); // 3000 milliseconds = 3 seconds
}
</script>
